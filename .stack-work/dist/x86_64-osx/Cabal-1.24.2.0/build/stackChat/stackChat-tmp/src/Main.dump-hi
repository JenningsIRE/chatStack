
==================== FINAL INTERFACE ====================
2017-11-24 01:20:22.388858 UTC

interface main@main:Main 8002
  interface hash: aa1ca2847c3474ef7e718f9bb956ab0c
  ABI hash: 12b7db6349540befa9d5980a2a96b831
  export-list hash: 06d1df09ed38a5b75fe0f5abdc0be36e
  orphan hash: e3f907cc77bbc0eb7e4f425dad3f8e77
  flag hash: 4a911ef96c2b9d76f64eec71abf04ce6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.broadcast
  Main.chat
  Main.disconnect
  Main.dupClient
  Main.getMessageLines
  Main.getUserLines
  Main.gm
  Main.go
  Main.handleMessage
  Main.heloText
  Main.joinChat
  Main.joinChatroom
  Main.killService
  Main.leaveChatroom
  Main.main
  Main.mainLoop
  Main.newClient
  Main.newRoom
  Main.newServer
  Main.runClient
  Main.talk
  Main.Client{Main.Client clientHandle clientIP clientId clientName clientPort clientSendChan}
  Main.ClientName
  Main.Message{Main.Broadcast Main.Command}
  Main.Room{Main.Room roomClients roomName roomRef}
  Main.RoomName
  Main.RoomRef
  Main.Server{Main.Server clients nextRef refs rooms sock}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj:Control.Concurrent.Async ea0392541014747b7209d5d4a7804b6a
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Exception.Base 1e106916283856f4d9caeddab92cd861
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  base-4.9.1.0:Text.Printf 6701574960cd2af960fec5d940be0c25
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network e1c2bc629a33bc735be38b505b5877ff
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Internal 9f052186d90733a29fe9bf6bf8921c1c
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Types 2eb8a83dc42cc86a12e652ce3294cbda
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 791cd378857d88a7ed4d753121139423
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TVar 8271fdeaf6f41f205dbe31243cf91390
a846f91ed410bfd476ab850310e22e30
  $s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat ::
    [GHC.Types.Char] -> Text.Printf.ModifierParser
  {- Arity: 2, Strictness: <L,A><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: [GHC.Types.Char]) (ds2 :: [GHC.Types.Char]) ->
                 case ds2 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs }) -}
3a1c4a85518f5a6cb3bfaf3ba933e77b
  $sdelete_$sgo10 ::
    GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Map.Base.Map GHC.Types.Int a1) ->
                 case w of ww { GHC.Types.I# ww1 -> Main.$w$sgo10 @ a1 ww1 w1 }) -}
19582a2c0e923c13a486d1ae70cb27ce
  $shPrintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
6040e240aac091cb76dfd3fd6f7f715f
  $sinsert_$sgo1 ::
    GHC.Types.Int
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <S,1*U(U)><L,U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: a1)
                   (w2 :: Data.Map.Base.Map GHC.Types.Int a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$sgo1 @ a1 ww1 w1 w2 }) -}
c062712c6eded35e5cf6838865ce7d9b
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
b79e73408debb254b0c787ed67bb879e
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Base.Map [GHC.Types.Char] a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
6210aa73a4bb794a27ad3ad0105b5910
  $tc'Broadcast :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3142049783279842247##
                   10598622670723664079##
                   Main.$trModule
                   Main.$tc'Broadcast1) -}
99f3455298ef37c6bc51a517745ed47c
  $tc'Broadcast1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Broadcast"#) -}
e62d791731323355b04c005ddd44e49e
  $tc'Client :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14317905627767584460##
                   8020356174247805466##
                   Main.$trModule
                   Main.$tc'Client1) -}
1e31cdcbef3d5a45efde6decabdcaefc
  $tc'Client1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Client"#) -}
71a1d0da8ac90eb52db4e0337dee0105
  $tc'Command :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14407055736893994245##
                   9773285697625515779##
                   Main.$trModule
                   Main.$tc'Command1) -}
df8b35970719712831612cdf74ffb012
  $tc'Command1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Command"#) -}
8a0a9718bb399f25267220332a006bb5
  $tc'Room :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15700381252520738790##
                   3084308557406310876##
                   Main.$trModule
                   Main.$tc'Room1) -}
56f5dc7e7d5febc3756b7e33a32976fb
  $tc'Room1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Room"#) -}
e2e47e4b095050486d76025efbb9eb8d
  $tc'Server :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17147978485207381799##
                   15204794003762209136##
                   Main.$trModule
                   Main.$tc'Server1) -}
0a4a60082ab2028484dd711c5f968b45
  $tc'Server1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Server"#) -}
824c8b6e5d1e111a64ffa02e17dfa0f0
  $tcClient :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2041806266336690928##
                   6211083142683335045##
                   Main.$trModule
                   Main.$tcClient1) -}
f6308ac30128598c150371405caec582
  $tcClient1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Client"#) -}
a317a2b68abab7bca30880bdf39d36dc
  $tcMessage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11750200497582023075##
                   1107912994446066806##
                   Main.$trModule
                   Main.$tcMessage1) -}
9d158e0a5fe47b777c8610b9e6ae8f21
  $tcMessage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Message"#) -}
7032b10c55fac670a9ada61aff97bf35
  $tcRoom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8636991122445321244##
                   10670091026038618334##
                   Main.$trModule
                   Main.$tcRoom1) -}
c1754b4ce005bd5091b311ff740a19bb
  $tcRoom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Room"#) -}
6aba3734e0be30f8602a90a2af677de2
  $tcServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7505357571270362355##
                   10136080178563477716##
                   Main.$trModule
                   Main.$tcServer1) -}
9dec17e7d0d7ed6f4ff7f48675023568
  $tcServer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Server"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
9a052e776d9ba13d6eb6d3875b088761
  $w$sgo1 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
30b69a2add2fa838a419cc059f94c040
  $w$sgo10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
98218b76d7d3077ab515ee5bf1b6225f
  $wbroadcast ::
    Main.Server
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Client)
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*H><S,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Main.Server)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Client))
                   (w1 :: Main.Message)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                        ww
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 letrec {
                   go10 :: GHC.Conc.Sync.STM ()
                           -> Data.Map.Base.Map GHC.Types.Int Main.Client
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 3, Strictness: <C(S),1*C1(U(U,U))><S,1*U><S,U> -}
                   = \ (z' :: GHC.Conc.Sync.STM ())
                       (ds :: Data.Map.Base.Map GHC.Types.Int Main.Client)
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild {
                       Data.Map.Base.Bin dt kx x l r
                       -> go10
                            (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case x of wild1 { Main.Client ds2 ds3 ds4 ds5 ds6 ds7 ->
                             case ds7 of wild2 { Control.Concurrent.STM.TChan.TChan dt1 dt2 ->
                             case GHC.Prim.readTVar#
                                    @ GHC.Prim.RealWorld
                                    @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                    dt2
                                    eta1 of ds8 { (#,#) ipv2 ipv3 ->
                             case GHC.Prim.newTVar#
                                    @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                    @ GHC.Prim.RealWorld
                                    (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                                    ipv2 of ds9 { (#,#) ipv4 ipv5 ->
                             case ipv3 of wild3 { GHC.Conc.Sync.TVar tvar# ->
                             case GHC.Prim.writeTVar#
                                    @ GHC.Prim.RealWorld
                                    @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                    tvar#
                                    (Control.Concurrent.STM.TChan.TCons @ Main.Message w1 ipv5)
                                    ipv4 of s2# { DEFAULT ->
                             case GHC.Prim.writeTVar#
                                    @ GHC.Prim.RealWorld
                                    @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                    dt2
                                    (GHC.Conc.Sync.TVar
                                       @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                       ipv5)
                                    s2# of s2#1 { DEFAULT ->
                             go10 z' r s2#1 } } } } } } })
                              `cast`
                            (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                            l
                            eta
                       Data.Map.Base.Tip
                       -> z' `cast` (GHC.Conc.Sync.N:STM[0] <()>_R) eta }
                 } in
                 go10
                   Main.broadcast2 `cast` (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                   ipv1
                   ipv }) -}
3ac7b7a7f176a20d9c972224065ecab8
  $wchat ::
    GHC.Conc.Sync.TVar (Data.Map.Base.Map Main.RoomName Main.Room)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Base.String Main.RoomName)
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 5, Strictness: <L,1*U(U)><L,1*U(U)><L,U><S,U><S,U>,
     Inline: [0] -}
584720e17a44267351eb697584424949
  $wdisconnect ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.Handle.Types.Handle)
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.List.$wlenAcc
                        @ [GHC.Types.Char]
                        (Data.OldList.lines w)
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww2 3#) of wild {
                   GHC.Types.False
                   -> case Text.Printf.$fHPrintfTypeIO1
                             @ ()
                             Main.$shPrintf3
                               `cast`
                             (Sym (Data.Type.Equality.N:~[0] <*>_N) <()>_N <()>_N)
                             ww
                             Main.disconnect2
                             (GHC.Types.:
                                @ (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
                                (Main.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat w,
                                 \ (w2 :: Text.Printf.FieldFormat) ->
                                 case w2 of ww1 { Text.Printf.FieldFormat ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                                 case ww9 of ww10 { GHC.Types.C# ww11 ->
                                 Text.Printf.$wformatString
                                   @ GHC.Types.Char
                                   Text.Printf.$fIsCharChar
                                   w
                                   ww3
                                   ww4
                                   ww5
                                   ww11 } })
                                (GHC.Types.[] @ Text.Printf.UPrintf))
                             w1 of ds1 { (#,#) ipv ipv1 ->
                      (# ipv, GHC.Types.False #) }
                   GHC.Types.True -> (# w1, GHC.Types.False #) } }) -}
b17620cae8c79d2da411698ba3e52d91
  $whandleMessage ::
    Main.Server
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Main.Message
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 8,
     Strictness: <L,1*U(1*U(U(U),A,A,A,1*U(U)),1*U(U),A,U(U),1*U(U))><L,U(U)><L,U><L,U(U)><L,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
d2c3e664663acc211f9b08b5c0e5fc59
  $wheloText ::
    Main.Server
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 6, Strictness: <S,1*H><L,U><L,U(U)><L,U><L,U><S,U>,
     Inline: [0] -}
89160c56a3088cc2954593a1ce465f68
  $wjoinChat ::
    Main.RoomRef
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Client)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Main.Message
    -> Main.Server
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 13,
     Strictness: <L,1*U(U)><S,U><L,1*U(U)><L,U><L,U><L,U><L,U><L,U(U)><L,1*U(U)><S,U><L,U><S,1*H><S,U>,
     Inline: [0] -}
7bc7517536c0f4724aad9a36e1f5e9a0
  $wjoinChatroom ::
    GHC.Conc.Sync.TVar Main.RoomRef
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map Main.RoomName Main.Room)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Base.String Main.RoomName)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Main.Message
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 9,
     Strictness: <L,1*U(U)><L,U(U)><L,1*U(U)><L,U(U)><L,1*U(U)><L,U><L,U><S,U><S,U>,
     Inline: [0] -}
7fa25010efda2d681f14eb1df78f39b4
  $wleaveChatroom ::
    GHC.Conc.Sync.TVar (Data.Map.Base.Map Main.RoomName Main.Room)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Base.String Main.RoomName)
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 6,
     Strictness: <L,1*U(U)><L,1*U(U)><L,U(U)><L,U><S,U><S,U>,
     Inline: [0] -}
b29a0d6e94288333e23662c4f42830f9
  $wmainLoop ::
    Main.Server
    -> Foreign.C.Types.CInt
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> Network.Socket.Types.ProtocolNumber
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld Network.Socket.Types.SocketStatus
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <L,U(U(U(U),A,A,A,U(U)),U(U),U(U),U(U),U(U))><L,U(U)><S,U><L,U><L,U(U)><S,U><L,U><L,U(U)><S,U>,
     Inline: [0] -}
623380402a1c817abc5ca361ce080d91
  $wrunClient ::
    Network.Socket.Types.Socket
    -> GHC.Conc.Sync.TVar Main.RoomRef
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map Main.RoomName Main.Room)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Base.String Main.RoomName)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 10,
     Strictness: <L,U(U(U),A,A,A,U(U))><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U><L,U(U)><L,U><L,U(U,U)><S,U>,
     Inline: [0] -}
3b2bf40b8ae32417e7dbcbf09936dc9a
  $wtalk ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Network.Socket.Types.Socket
    -> GHC.Conc.Sync.TVar Main.RoomRef
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map GHC.Types.Int Main.Client)
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map Main.RoomName Main.Room)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Base.String Main.RoomName)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 10,
     Strictness: <L,U><L,U><S,U><L,U(U(U),A,A,A,U(U))><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,U>,
     Inline: [0] -}
25ab62208b3e5a6e6d042d60ad844611
  data Client
    = Client {clientId :: GHC.Types.Int,
              clientName :: Main.ClientName,
              clientIP :: GHC.Base.String,
              clientPort :: GHC.Types.Int,
              clientHandle :: GHC.IO.Handle.Types.Handle,
              clientSendChan :: Control.Concurrent.STM.TChan.TChan Main.Message}
fbed4067a26e1dec37a31b9eba546428
  type ClientName = GHC.Base.String
2118b3f2a72b02076c477b5b6fc37bef
  data Message = Broadcast GHC.Base.String | Command GHC.Base.String
75aa82be0484c3780c49a6473a4cd6fe
  data Room
    = Room {roomRef :: Main.RoomRef,
            roomName :: Main.RoomName,
            roomClients :: GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Types.Int Main.Client)}
cb13d7f018fcb8b556db730c8275a3f3
  type RoomName = GHC.Base.String
c04b3470e04023a8860e2b8cd19af1ea
  type RoomRef = GHC.Types.Int
fbd8cb7db89f747b8a7c4294fd5fefe9
  data Server
    = Server {sock :: Network.Socket.Types.Socket,
              nextRef :: GHC.Conc.Sync.TVar Main.RoomRef,
              clients :: GHC.Conc.Sync.TVar
                           (Data.Map.Base.Map GHC.Types.Int Main.Client),
              rooms :: GHC.Conc.Sync.TVar
                         (Data.Map.Base.Map Main.RoomName Main.Room),
              refs :: GHC.Conc.Sync.TVar
                        (Data.Map.Base.Map GHC.Base.String Main.RoomName)}
b19e1648ab0b09c05dc8f4ffa1c41756
  broadcast ::
    Main.Server -> Main.Room -> Main.Message -> GHC.Conc.Sync.STM ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*H><S(LLS(S)),1*U(A,A,1*U(U))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.broadcast1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Room>_R
                 ->_R <Main.Message>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
4c18e2d9d3b934bca9ca48112984554d
  broadcast1 ::
    Main.Server
    -> Main.Room
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*H><S(LLS(S)),1*U(A,A,1*U(U))><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Room)
                   (w2 :: Main.Message)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of w4 { Main.Server ipv ipv1 ipv2 ipv3 ipv4 ->
                 case w1 of ww { Main.Room ww1 ww2 ww3 ->
                 case ww3 of ww4 { GHC.Conc.Sync.TVar ww5 ->
                 Main.$wbroadcast w4 ww5 w2 w3 } } }) -}
45324ee44e058343a8d08de9eb117f7e
  broadcast2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Tuple.() #)) -}
1da96928095a43f0b352865a278af21b
  chat ::
    Main.Server
    -> Main.Client -> GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S,1*U(A,A,A,1*U(U),1*U(U))><S,1*U(A,A,A,A,U,A)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.chat1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
0680ab59dcaf3b0a7499b8aa4a341e8f
  chat1 ::
    Main.Server
    -> Main.Client
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <S,1*U(A,A,A,1*U(U),1*U(U))><S,1*U(A,A,A,A,U,A)><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Server ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Main.Client ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Main.$wchat ww4 ww5 ww11 w2 w3 } }) -}
566eab95a496702434254ae1eb6e44fb
  clientHandle :: Main.Client -> GHC.IO.Handle.Types.Handle
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
1700ae9e32931b1f81da302fcd188599
  clientIP :: Main.Client -> GHC.Base.String
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 -> ds3 }) -}
05fb848dfdb76c29392fb6b634d0c371
  clientId :: Main.Client -> GHC.Types.Int
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 -> ds1 }) -}
12c636af8e528cc7f39fba1a84298fdc
  clientName :: Main.Client -> Main.ClientName
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 -> ds2 }) -}
deda02b90b6d61308f5451c5389fa450
  clientPort :: Main.Client -> GHC.Types.Int
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 -> ds4 }) -}
46c81784bcbff7ecddd7bdec28ef357c
  clientSendChan ::
    Main.Client -> Control.Concurrent.STM.TChan.TChan Main.Message
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 -> ds6 }) -}
125d9dc68daa73c517c521fa9ad1818c
  clients ::
    Main.Server
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map GHC.Types.Int Main.Client)
  RecSel Left Main.Server
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Server) ->
                 case ds of wild { Main.Server ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
a49d97902fe734bf8b3a8bc53301c4c4
  disconnect ::
    Main.Server
    -> Main.Client -> GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4, Strictness: <L,A><S,1*U(A,A,A,A,U,A)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.disconnect1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
52c73fa4db81b085eacb4f12896c213c
  disconnect1 ::
    Main.Server
    -> Main.Client
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, Strictness: <L,A><S,1*U(A,A,A,A,U,A)><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Main.Client ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wdisconnect ww5 w2 w3 }) -}
983e5bdfd7192a0bbfb2b11a2a76396a
  disconnect2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ERROR_CODE: 1 \n\
                   \ERROR_DESCRIPTION: Unrecognised command: %s\n"#) -}
f14f5a4043c6ebe19250067e1668e5bf
  dupClient ::
    Main.Client
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Conc.Sync.STM Main.Client
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U(U,A,A,A,U,U)><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.dupClient1
                  `cast`
                (<Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <Main.Client>_R)) -}
8684ef85939ca0b473680ab63e2cc786
  dupClient1 ::
    Main.Client
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Client #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U(U,A,A,A,U,U)><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (ds :: Main.Client)
                   (name :: GHC.Base.String)
                   (ip :: GHC.Base.String)
                   (port :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 ds5 ds6 ->
                 (# eta, Main.Client ds1 name ip port ds5 ds6 #) }) -}
39c826fba4b314802c08d31491ba5ab1
  getMessageLines ::
    GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getMessageLines1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
6630015766726045368793bbd0847980
  getMessageLines1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (hdl :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.getMessageLines2 hdl (GHC.Types.[] @ GHC.Types.Char) eta) -}
f7bec78241e154627bc50707df34cccf
  getMessageLines2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 3, Strictness: <S,U><L,U><S,U> -}
03923e7c0a3feb8857f8e1a44a560841
  getUserLines ::
    GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getUserLines1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
8d5dd36f4d13167639c877b291bdd27c
  getUserLines1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (hdl :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.getUserLines2 hdl (GHC.Types.[] @ GHC.Types.Char) eta) -}
565bd5c885413b2c23533d862506e013
  getUserLines2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 3, Strictness: <S,U><L,1*U><S,U> -}
1b1447acf2b25456518b2a68fcfff9b2
  gm ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getMessageLines2
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
446ecc21ee98ca4fbb0c30cacf060954
  go ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getUserLines2
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
43431216bcddf126c1dd95633ca0be47
  handleMessage ::
    Main.Server
    -> Main.Client -> Main.Message -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,1*U(1*U(U(U),A,A,A,1*U(U)),1*U(U),A,U(U),1*U(U))><S,1*U(U(U),A,U,U(U),U,U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.handleMessage1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R <Main.Message>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
85658dbdc58be993690bf16486770a7f
  handleMessage1 ::
    Main.Server
    -> Main.Client
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <L,1*U(1*U(U(U),A,A,A,1*U(U)),1*U(U),A,U(U),1*U(U))><S,1*U(U(U),A,U,U(U),U,U)><S,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: Main.Message)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Main.Client ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$whandleMessage w ww1 ww3 ww4 ww5 ww6 w2 w3 }) -}
8d70c4bc2bec8c38ebe5d47868a14c28
  heloText ::
    Main.Server
    -> Main.Client -> GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4, Strictness: <S,1*H><S,1*U(A,A,U,U(U),U,A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.heloText1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
b7150874f01133458aabfc618ab3e90d
  heloText1 ::
    Main.Server
    -> Main.Client
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, Strictness: <S,1*H><S,1*U(A,A,U,U(U),U,A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of w4 { Main.Server ipv ipv1 ipv2 ipv3 ipv4 ->
                 case w1 of ww { Main.Client ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$wheloText w4 ww3 ww4 ww5 w2 w3 } }) -}
64f0b5c3017976d6b0c72305593a6093
  joinChat ::
    Main.Room
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Main.Client
    -> Main.Server
    -> GHC.Conc.Sync.STM ()
  {- Arity: 9,
     Strictness: <S(LLS(S)),1*U(1*U(U),A,U(U))><L,1*U(U)><L,U><L,U><L,U><L,U><S(LLLLSL),1*U(U(U),A,A,1*U(U),U,U)><S,1*H><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.joinChat1
                  `cast`
                (<Main.Room>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <Main.Client>_R
                 ->_R <Main.Server>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
c2cfb9151e82d6c26cfa1b1eac127791
  joinChat1 ::
    Main.Room
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Main.Client
    -> Main.Server
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <S(LLS(S)),1*U(1*U(U),A,U(U))><L,1*U(U)><L,U><L,U><L,U><L,U><S(LLLLSL),1*U(U(U),A,A,1*U(U),U,U)><S,1*H><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (9, True, False)
                (\ (w :: Main.Room)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Base.String)
                   (w4 :: GHC.Base.String)
                   (w5 :: GHC.Base.String)
                   (w6 :: Main.Client)
                   (w7 :: Main.Server)
                   (w8 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Room ww1 ww2 ww3 ->
                 case ww3 of ww4 { GHC.Conc.Sync.TVar ww5 ->
                 case w6 of ww6 { Main.Client ww7 ww8 ww9 ww10 ww11 ww12 ->
                 case w7 of w9 { Main.Server ipv ipv1 ipv2 ipv3 ipv4 ->
                 Main.$wjoinChat
                   ww1
                   ww5
                   w1
                   w2
                   w3
                   w4
                   w5
                   ww7
                   ww10
                   ww11
                   ww12
                   w9
                   w8 } } } }) -}
afc13ddde85c994968c9ca8dd404c58d
  joinChatroom ::
    Main.Server
    -> Main.Client -> GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S,1*U(A,1*U(U),A,U(U),1*U(U))><S,1*U(U(U),A,A,1*U(U),U,U)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.joinChatroom1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
e769102546a0b594b6f1d0ebfde2b856
  joinChatroom1 ::
    Main.Server
    -> Main.Client
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <S,1*U(A,1*U(U),A,U(U),1*U(U))><S,1*U(U(U),A,A,1*U(U),U,U)><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Server ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Main.Client ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Main.$wjoinChatroom ww2 ww4 ww5 ww7 ww10 ww11 ww12 w2 w3 } }) -}
fea45f9d8b1216b0f18009c3c3ed4697
  killService ::
    Main.Server -> Main.Client -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 3,
     Strictness: <S(S(LLLLS(S))LLLL),1*U(1*U(U(U),A,A,A,1*U(U)),A,A,A,A)><S,1*H><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.killService1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
e8a1ca663ce0afcb9fb53914b5010601
  killService1 ::
    Main.Server
    -> Main.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3,
     Strictness: <S(S(LLLLS(S))LLLL),1*U(1*U(U(U),A,A,A,1*U(U)),A,A,A,A)><S,1*H><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (server :: Main.Server)
                   (ds :: Main.Client)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case server of wild { Main.Server ds1 ds2 ds3 ds4 ds5 ->
                 case ds of wild1 { Main.Client ds6 ds7 ds8 ds9 ds10 ds11 ->
                 case ds1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose ww1 ww7 eta of ds12 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.False #) } } } } }) -}
a9fd7a9ce7a57c0888e7afcaae00792c
  leaveChatroom ::
    Main.Server
    -> Main.Client -> GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S,1*U(A,A,A,1*U(U),1*U(U))><S,1*U(U(U),A,A,A,U,A)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.leaveChatroom1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
2c4f663dd21f488ebcb551db34464756
  leaveChatroom1 ::
    Main.Server
    -> Main.Client
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <S,1*U(A,A,A,1*U(U),1*U(U))><S,1*U(U(U),A,A,A,U,A)><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Server ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Main.Client ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Main.$wleaveChatroom ww4 ww5 ww7 ww11 w2 w3 } }) -}
d9c0dee8a685c5ed422401aaa63f23bf
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
01d62c2c484918d4b5d94b688c90c90e
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
129a1a814fa667791781f32a098e848d
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ae3bc2275a285c7d5148e51f138dfcc7
  mainLoop ::
    Main.Server
    -> Network.Socket.Types.Socket
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U(U),A,A,A,U(U)),U(U),U(U),U(U),U(U))><S(LSLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.mainLoop1
                  `cast`
                (<Main.Server>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
714c44f05902f1a370c766dd214355bb
  mainLoop1 ::
    Main.Server
    -> Network.Socket.Types.Socket
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U(U),A,A,A,U(U)),U(U),U(U),U(U),U(U))><S(LSLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 Main.$wmainLoop w ww1 ww2 ww3 ww4 ww7 w2 w3 w4 } }) -}
0a737dac637c8bc3efd1dae6d861c314
  newClient ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Conc.Sync.STM Main.Client
  {- Arity: 5, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.newClient1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <Main.Client>_R)) -}
07c6cde2bebfb2384cd904300f2280c1
  newClient1 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Client #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (id :: GHC.Types.Int)
                   (host :: GHC.Base.String)
                   (port :: GHC.Types.Int)
                   (handle :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Control.Concurrent.STM.TChan.TList Main.Message)
                        @ GHC.Prim.RealWorld
                        (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                        eta of ds { (#,#) ipv ipv1 ->
                 let {
                   hole :: GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Main.Message)
                   = GHC.Conc.Sync.TVar
                       @ (Control.Concurrent.STM.TChan.TList Main.Message)
                       ipv1
                 } in
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Main.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Main.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Main.Client
                      id
                      (GHC.Types.[] @ GHC.Types.Char)
                      host
                      port
                      handle
                      (Control.Concurrent.STM.TChan.TChan
                         @ Main.Message
                         ipv3
                         ipv5) #) } } }) -}
b795f7449d04348d3f19b908e61cce47
  newRoom ::
    Main.RoomRef -> Main.RoomName -> GHC.Conc.Sync.STM Main.Room
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.newRoom1
                  `cast`
                (<Main.RoomRef>_R
                 ->_R <Main.RoomName>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <Main.Room>_R)) -}
86b998a0c6b5b3515c883a45dfc7146e
  newRoom1 ::
    Main.RoomRef
    -> Main.RoomName
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Room #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ref :: Main.RoomRef)
                   (name :: Main.RoomName)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Types.Int @ Main.Client)
                        eta of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    Main.Room
                      ref
                      name
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                         ipv1) #) }) -}
74e61f6c86ffca7902d38626dfdf5fdc
  newServer ::
    Network.Socket.Types.Socket -> GHC.Types.IO Main.Server
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.newServer1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Main.Server>_R)) -}
4fd60f96e4a036864a968f9887f87830
  newServer1 ::
    Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Server #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: (\ (s :: Network.Socket.Types.Socket)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Types.Int @ Main.Client)
                        eta of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map Main.RoomName Main.Room)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ Main.RoomName @ Main.Room)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Base.String Main.RoomName)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Base.String @ Main.RoomName)
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.newTVar#
                        @ Main.RoomRef
                        @ GHC.Prim.RealWorld
                        Main.newServer2
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    Main.Server
                      s
                      (GHC.Conc.Sync.TVar @ Main.RoomRef ipv7)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                         ipv1)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map Main.RoomName Main.Room)
                         ipv3)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Base.String Main.RoomName)
                         ipv5) #) } } } }) -}
80ef9f2318b5c73c4ea0657a4dcdbe9e
  newServer2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
7fcc2475d3c1a07c8d906e069557d42a
  nextRef :: Main.Server -> GHC.Conc.Sync.TVar Main.RoomRef
  RecSel Left Main.Server
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Server) ->
                 case ds of wild { Main.Server ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
20fbbd817908c64a0592d1dca08285a0
  refs ::
    Main.Server
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Base.String Main.RoomName)
  RecSel Left Main.Server
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Server) ->
                 case ds of wild { Main.Server ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
448915ad729a170fe8267032c44d37f5
  roomClients ::
    Main.Room
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map GHC.Types.Int Main.Client)
  RecSel Left Main.Room
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Room) ->
                 case ds of wild { Main.Room ds1 ds2 ds3 -> ds3 }) -}
b233d5ae0b4ca6b60aee4d26c31e4fc7
  roomName :: Main.Room -> Main.RoomName
  RecSel Left Main.Room
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Room) ->
                 case ds of wild { Main.Room ds1 ds2 ds3 -> ds2 }) -}
7d3101c1d9b82dcda9ffc134c5d3c678
  roomRef :: Main.Room -> Main.RoomRef
  RecSel Left Main.Room
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Room) ->
                 case ds of wild { Main.Room ds1 ds2 ds3 -> ds1 }) -}
d9b8aedef0ea5ff48ad7631919af62b0
  rooms ::
    Main.Server
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map Main.RoomName Main.Room)
  RecSel Left Main.Server
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Server) ->
                 case ds of wild { Main.Server ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
ab5af3bd38edb16e7590e304071eae65
  runClient :: Main.Server -> Main.Client -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <S,1*U(U(U(U),A,A,A,U(U)),U(U),A,U(U),U(U))><S,1*U(U(U),A,U,U(U),U,U(U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runClient1
                  `cast`
                (<Main.Server>_R
                 ->_R <Main.Client>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9c88574c2ec6e936665d4d588687425b
  runClient1 ::
    Main.Server
    -> Main.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <S,1*U(U(U(U),A,A,A,U(U)),U(U),A,U(U),U(U))><S,1*U(U(U),A,U,U(U),U,U(U,U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Main.Server)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Server ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Main.Client ww7 ww8 ww9 ww10 ww11 ww12 ->
                 Main.$wrunClient ww1 ww2 ww4 ww5 ww7 ww9 ww10 ww11 ww12 w2 } }) -}
70ded281ae70e498da68ed6a4bc60e18
  sock :: Main.Server -> Network.Socket.Types.Socket
  RecSel Left Main.Server
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U,U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Server) ->
                 case ds of wild { Main.Server ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
16bc5637d98100a4e876df3f38aea278
  talk ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Main.Server
    -> GHC.Types.Int
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U><L,U><S,U><S,1*U(U(U(U),A,A,A,U(U)),U(U),U(U),U(U),U(U))><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.talk1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R <Main.Server>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cda2fd4a78ea0362e95d5f0e0602ea10
  talk1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Main.Server
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U><L,U><S,U><S,1*U(U(U(U),A,A,A,U(U)),U(U),U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.IO.Handle.Types.Handle)
                   (w3 :: Main.Server)
                   (w4 :: GHC.Types.Int)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w3 of ww { Main.Server ww1 ww2 ww3 ww4 ww5 ->
                 Main.$wtalk w w1 w2 ww1 ww2 ww3 ww4 ww5 w4 w5 }) -}
"SPEC/Main $fPrintfArg[]_$cparseFormat @ Char" [ALWAYS] forall ($dIsChar :: Text.Printf.IsChar
                                                                              GHC.Types.Char)
  Text.Printf.$fPrintfArg[]_$cparseFormat @ GHC.Types.Char $dIsChar
  = Main.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

